We plan on following a scrum-like procedure for this project which will mean going through multilpe iterations in the coming weeks to ensure maximum functionality for the application. Although the implementation of all BCI applications can be complex, the underlying idea behind the project is a relatively simple one and should be able to fully implement the project with 3 sprints with signigicant benchmarks at each one, the thrird being the final finished product.  In term of the software and API's we will use to code the project, we initially wamted to use Unity because it's very conducive to gaming environments but using it in collaboration with OpenBCI showed problems initally. Depending on inital trys at the basic coding involved we might have to switch to javascript, which people have had success with in the past. In terms of our team's collaborative approach, we plan to split up begining responsibilities between the graphic interface engineering and the mathamatical translation of the EEG data to the corresponding speed/difficulty of the game.  The graphic interface will represent much of the work involved to make the application functional but the translation of EEG data will be critical to actual use of the application. Optimizing moving averages and handling violatile maximums and minimums will be important to gameplay and will ikely take just as much, if not more time than the graphic interface to fine-tune. Balancing these the pillars through the sprints/iterations we be critical for being able to accurately test the application moving forward and is why collaboration will be a key role in this project. 
